package de.janscheurenbrand.needminer.tasks;

import de.janscheurenbrand.needminer.database.Database;
import de.janscheurenbrand.needminer.database.TweetDAO;
import de.janscheurenbrand.needminer.twitter.Tweet;

import java.util.HashSet;
import java.util.Iterator;
import java.util.concurrent.Callable;

/**
 * Task for comparing tweets based on their text's hash.
 * Uses the hashes generated by HashTask
 */
public class MarkDuplicatesTask implements Callable {
    // Use HashSet fpr better search performance
    private HashSet<String> previousHashes = new HashSet<>();

    @Override
    public Void call() throws Exception {
        Database db = new Database();
        TweetDAO tweetDAO = db.getTweetDAO();
        Iterator<Tweet> tweets = tweetDAO.getTweetsIterator();

        while (tweets.hasNext()) {
            Tweet tweet = tweets.next();
            String hash = tweet.getHashes().get("originalTextWithoutRT");
            boolean isDuplicate = previousHashes.contains(hash);
            tweet.addBooleanFeature("duplicate", isDuplicate);
            previousHashes.add(hash);
            tweetDAO.update(tweet);
        }

        return null;
    }
}
